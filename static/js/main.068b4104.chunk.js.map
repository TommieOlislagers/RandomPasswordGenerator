{"version":3,"sources":["Generator/Generator.js","App.js","reportWebVitals.js","index.js"],"names":["getRandomInt","max","Math","floor","random","Generate","PasswordLength","IncludeSpecialCharacters","alphabet","numbers","specialCharacters","password","i","randomCharacter","length","PasswordGenerator","props","checkboxChanged","setState","includeSpecialCharacters","state","className","style","paddingBottom","onChange","event","target","value","this","Array","from","item","index","type","defaultChecked","onClick","navigator","clipboard","writeText","aria-hidden","React","Component","App","GithubUrl","href","paddingTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAGA,SAASA,EAAaC,GAClB,OAAOC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMF,IAGjD,SAASI,EAASC,EAAgBC,GAO9B,IALA,IAAMC,EAAW,uDACXC,EAAU,YACVC,EAAoB,mCACtBC,EAAW,GAEPC,EAAI,EAAGA,EAAIN,EAAgBM,IACnC,CACI,IAAIC,EAAsDb,GAAP,IAA7BO,EAAiD,EAAkB,GAEzFI,GAAgC,IAApBE,EAAwBL,EAASR,EAAaQ,EAASM,SAC/C,IAApBD,EAAwBJ,EAAQT,EAAaS,EAAQK,SACjC,IAApBD,EAAwBH,EAAkBV,EAAaU,EAAkBI,SAAW,GAGxF,OAAOH,E,IAqCII,E,kDAjCX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAQVC,gBAAkB,WACd,EAAKC,SAAS,CACVC,0BAA2B,EAAKC,MAAMD,4BAT1C,EAAKC,MAAQ,CACTT,SAAU,GACVG,OAAQ,GACRK,0BAA0B,GALf,E,0CAenB,WAAU,IAAD,OACL,OACI,sBAAKE,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAaC,MAAO,CAACC,cAAe,OAAlD,yCACA,oBAAGF,UAAU,aAAb,8BAA2C,wBAAQG,SAAU,SAACC,GAAD,OAAW,EAAKP,SAAS,CAACJ,OAAQW,EAAMC,OAAOC,SAASA,MAAOC,KAAKR,MAAMN,OAAQO,UAAU,4BAA9G,SAClCQ,MAAMC,KAAK,CAAChB,OAAQ,KAAK,SAACiB,EAAMC,GAAP,OAA2B,IAAVA,EAAc,iCAAqBA,GAARA,GAA0B,WAGxG,oBAAGX,UAAU,aAAb,uCACA,uBAAOY,KAAK,WAAWC,eAAgBN,KAAKR,MAAMD,yBAA0BK,SAAUI,KAAKX,gBAAiBI,UAAU,6CACtH,wBAAQA,UAAU,mBAAmBc,QAAS,kBAAM,EAAKjB,SAAS,CAAEP,SAAUN,EAAS,EAAKe,MAAMN,OAAQ,EAAKM,MAAMD,6BAArH,sBACA,uBACA,sBAAKE,UAAU,gCAAf,UAAgD,sBAAMA,UAAU,eAAhB,wBAAgD,sBAAMA,UAAU,0BAAhB,SAA2CO,KAAKR,MAAMT,WAAtJ,IAAuK,mBAAGwB,QAAS,WAAOC,UAAUC,UAAUC,UAAU,EAAKlB,MAAMT,WAAYU,UAAU,sCAAsCkB,cAAY,mB,GA5B3RC,IAAMC,WC8BvBC,MApDf,WAEE,IAAMC,EAAY,8DAElB,OACE,sBAAKtB,UAAU,iBAAf,UACE,qBAAKA,UAAU,iDAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,cAAf,SACI,oBAAGA,UAAU,0BAA0BuB,KAAMD,EAA7C,oBAA+D,mBAAGtB,UAAU,eAAekB,cAAY,kBAI/G,wBAAQlB,UAAU,iBAAlB,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAMC,MAAO,CAACuB,WAAY,SAAzC,UACE,qBAAKxB,UAAU,qBAAf,SACE,cAAC,EAAD,MAEF,sBAAKA,UAAU,4BAAf,UACE,+BAAI,mBAAGA,UAAU,aAAakB,cAAY,SAA1C,aACA,mGACA,+BACE,4DACA,mDACA,mDACA,yCACA,0DAGJ,qBAAKlB,UAAU,qBAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,+BAAI,mBAAGA,UAAU,eAAekB,cAAY,SAA5C,kBACA,+KAAiJ,mBAAGK,KAAMD,EAAT,8CAO7J,wBAAQtB,UAAU,iDAAlB,SACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,cAAf,SACI,qBAAKA,UAAU,OAAf,0ECpCHyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.068b4104.chunk.js","sourcesContent":["import './Generator.css';\r\nimport React from 'react';\r\n\r\nfunction getRandomInt(max) {\r\n    return Math.floor(Math.random() * Math.floor(max));\r\n}\r\n\r\nfunction Generate(PasswordLength, IncludeSpecialCharacters)\r\n{\r\n    const alphabet = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n    const numbers = \"123456789\";\r\n    const specialCharacters = \"!#$%&'()*+,-./:;<=>?@[\\\\]^_`{|}~\";\r\n    let password = \"\";\r\n\r\n    for(let i = 0; i < PasswordLength; i++)\r\n    {\r\n        let randomCharacter = IncludeSpecialCharacters === true ? getRandomInt(3) : getRandomInt(2);\r\n\r\n        password += randomCharacter === 0 ? alphabet[getRandomInt(alphabet.length)] : \r\n        randomCharacter === 1 ? numbers[getRandomInt(numbers.length)] : \r\n        randomCharacter === 2 ? specialCharacters[getRandomInt(specialCharacters.length)] : \"\";\r\n    }\r\n\r\n    return password;\r\n}\r\n\r\nclass PasswordGenerator extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            password: '',\r\n            length: 16,\r\n            includeSpecialCharacters: true\r\n        };\r\n    }\r\n\r\n    checkboxChanged = () => {\r\n        this.setState({\r\n            includeSpecialCharacters: !this.state.includeSpecialCharacters,\r\n        });\r\n      }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"generator\">\r\n                <h4 className=\"text-white\" style={{paddingBottom: '8px' }}>Generate your password now!</h4>\r\n                <p className=\"text-white\">Password Length: <select onChange={(event) => this.setState({length: event.target.value})} value={this.state.length} className=\"password-length-generator\">\r\n                        {Array.from({length: 21}, (item, index) => index !== 0 ? <option key={index}>{index}</option> : '')}\r\n                    </select>\r\n                </p>\r\n                <p className=\"text-white\">Include special characters\r\n                <input type=\"checkbox\" defaultChecked={this.state.includeSpecialCharacters} onChange={this.checkboxChanged} className=\"checkbox-special-characters-generator\"></input></p>\r\n                <button className=\"button-generator\" onClick={() => this.setState({ password: Generate(this.state.length, this.state.includeSpecialCharacters) })}>Generate</button>\r\n                <hr/>\r\n                <pre className=\"password-generator text-white\" ><span className=\"unselectable\">Password: </span><span className=\"password-span-generator\">{this.state.password}</span> <i onClick={() => {navigator.clipboard.writeText(this.state.password)}} className=\"fa fa-clipboard clipboard-generator\" aria-hidden=\"true\"></i></pre>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PasswordGenerator;","import './App.css';\nimport './Bootstrap.css';\nimport PasswordGenerator from './Generator/Generator.js';\n\nfunction App() {\n\n  const GithubUrl = \"https://github.com/TommieOlislagers/RandomPasswordGenerator\";\n\n  return (\n    <div className=\"App text-white\">\n      <nav className=\"container-fluid py-3 w-100 bg-black text-white\">\n        <div className=\"container\">\n          <div className=\"text-center\">\n              <a className=\"navbar-brand text-white\" href={GithubUrl}>Github <i className=\"fa fa-github\" aria-hidden=\"true\"></i></a>\n          </div>\n        </div>\n      </nav>\n      <header className=\"mobile-padding\">\n        <div className=\"container\">\n          <div className=\"row\" style={{paddingTop: '100px'}}>\n            <div className=\"col-md-5 pt-4 pb-5\">\n              <PasswordGenerator/>\n            </div>\n            <div className=\"offset-md-1 col-md-3 py-4\">\n              <h3><i className=\"fa fa-lock\" aria-hidden=\"true\"></i> Secure</h3>\n              <p>The password generator is in accordance with this password policy.</p>\n              <ul >\n                <li>At least 8 characters long</li>\n                <li>Uppercase letters</li>\n                <li>Lowercase letters</li>\n                <li>Numbers</li>\n                <li>Special characters</li>\n              </ul>\n            </div>\n            <div className=\"col-md-3 py-4 pb-5\">\n              <div className=\"row\">\n                <div className=\"col-md-12\">\n                  <h3><i className=\"fa fa-github\" aria-hidden=\"true\"></i> Open-source</h3>\n                  <p>Made public and drivin by the open-source community. Because of this the project can be improved by people and checked for malicious content. <a href={GithubUrl}>I want to help!</a></p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </header>\n      <footer className=\"container-fluid py-4 w-100 bg-black text-white\">\n          <div className=\"container\">\n              <div className=\"text-center\">\n                  <div className=\"px-1\">Â© 2020 Tommie Olislagers - All rights reserved.</div>\n              </div>\n          </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}